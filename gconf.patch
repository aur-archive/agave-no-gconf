--- agave-0.4.7/src/gcs-conf.cc	2008-02-25 21:07:02.000000000 -0600
+++ agave-0.4.7/src/gcs-conf.cc.new	2013-03-09 20:43:11.672369583 -0600
@@ -36,7 +36,7 @@
     // gconf recommends storing enumerations as strings rather than integers
     // since it's more robust against changes in enumeration order and is more
     // human-readable.  This is a helper for gconf_string_to_enum and vice versa
-    static GConfEnumStringPair schemetype_lookup_table[] = 
+    /*static GConfEnumStringPair schemetype_lookup_table[] = 
     {
         { SCHEME_COMPLEMENTS, "COMPLEMENTS" },
         { SCHEME_SPLIT_COMPLEMENTS, "SPLIT-COMPLEMENTS" },
@@ -45,11 +45,11 @@
         { SCHEME_ANALOGOUS, "ANALOGOUS" },
         { SCHEME_MONOCHROMATIC, "MONOCHROMATIC" },
         { 0, NULL }
-    };
+    };*/
 
     // convenience class to convert between gconf Value classes and basic types
     // more automatically
-    class Value : public Gnome::Conf::Value
+    /*class Value : public Gnome::Conf::Value
     {
         public:
             Value(const Gnome::Conf::Value& other) : Gnome::Conf::Value(other) {}
@@ -58,7 +58,7 @@
             operator Glib::ustring() { return get_string(); }
             operator double() { return get_float(); }
             operator float() { return get_float(); }
-    };
+    };*/
 
     const Glib::ustring Conf::APP_DIR = "/apps/agave";
 
@@ -128,18 +128,20 @@
 
     void Conf::set_last_scheme_type(tSchemeType t)
     {
-        Glib::ustring schemetype_string = gconf_enum_to_string(schemetype_lookup_table, t);
-        set_value(KEY_LAST_SCHEME_TYPE, schemetype_string);
+        //Glib::ustring schemetype_string = gconf_enum_to_string(schemetype_lookup_table, t);
+        //set_value(KEY_LAST_SCHEME_TYPE, schemetype_string);
+		 set_value(KEY_LAST_SCHEME_TYPE, t);
     }
 
 
     tSchemeType Conf::get_last_scheme_type(void)
     {
-        Glib::ustring scheme_type;
+        //Glib::ustring scheme_type;
         tSchemeType t;
-        if (!get_value(KEY_LAST_SCHEME_TYPE, scheme_type) ||
+        /*if (!get_value(KEY_LAST_SCHEME_TYPE, scheme_type) ||
                 !gconf_string_to_enum(schemetype_lookup_table,
-                    scheme_type.c_str(), reinterpret_cast<int*>(&t)))
+                    scheme_type.c_str(), reinterpret_cast<int*>(&t)))*/
+		  if (!get_value(KEY_LAST_SCHEME_TYPE, t))
         {
             t = SCHEME_TRIADS;
         }
